version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: "us-east-1"
    REPO_NAME: "apifestivos-backend"
    CONTAINER_NAME: "ProyectoFestivos-backend-container"
phases:  
  install:
    runtime-versions:
      docker: 19
    commands:
      - echo "Instalando Amazon Corretto 17..."
      - yum install -y java-17-amazon-corretto-devel
      - export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto.x86_64
      - export PATH=$JAVA_HOME/bin:$PATH
      - java -version
      
  pre_build:
    commands:
      - ls -altr
      - echo "Logging in to Amazon ECR..."
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REPO_URI="$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPO_NAME"
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION::8}
      - echo "REPO_URI=$REPO_URI" > repo_info.txt
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo "Building project..."
      - |
        if [ -f pom.xml ] || [ -f build.gradle ]; then
          echo "Detected backend (Java). Building..."          
          mvn -B -DskipTests package
        fi      
      
      
      - docker build -t $REPO_URI:$IMAGE_TAG .
      - docker tag $REPO_URI:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo "Building docker image..."
      - echo "RepoPath $REPO_URI"
      - echo "ImageTag $IMAGE_TAG"
      - echo "ImageUri $REPO_URI:$IMAGE_TAG"
      - echo "ContainerName $CONTAINER_NAME"
      - ls -la
      
      - echo "Pushing image to ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com    
      - docker push $REPO_URI:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$REPO_URI:$IMAGE_TAG" > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
